find_package(SWIG REQUIRED)


#default: enable python bindings
option(ENABLE_python "Enable Python bindings" ON)

#1. find swig
INCLUDE(${SWIG_USE_FILE})

#find python
if(NOT PYTHON_EXECUTABLE)
       FIND_PACKAGE(PythonInterpWhich)
endif()

#we got everything?
if ( (NOT EXISTS ${PYTHON_EXECUTABLE} ) )
   message("Did not find python")
   set(ENABLE_python OFF CACHE BOOL "Enable Python bindings" FORCE)
endif()

#find python libs and includes
if (NOT PYTHON_LIBRARIES OR NOT PYTHON_INCLUDE_DIRS)
   FIND_PACKAGE(PythonLibsDist)
  #FIND_PACKAGE(PythonLibs)
endif()

#find dist-packages
if (NOT PYTHON_INSTDIR)
   FIND_PACKAGE(PythonInst)
endif()

#find numpy
if (NOT NUMPY_INCLUDE_DIR)
   FIND_PACKAGE(Numpy)
endif()


if ( (NOT EXISTS ${PYTHON_EXECUTABLE}))
   message("Did not find python executable, disabling python interface.")
   message("Try specifying executable manually in CMakeLists.txt")
   set(ENABLE_python OFF CACHE BOOL "Enable Python bindings" FORCE)
endif()

if ( (NOT EXISTS ${PYTHON_INCLUDE_DIRS}))
   message("Did not find python include dirs")
   message(${PYTHON_INCLUDE_DIRS})
   set(ENABLE_python OFF CACHE BOOL "Enable Python bindings" FORCE)
endif()


if ( (NOT EXISTS ${NUMPY_INCLUDE_DIR}) )
   message("Did not find numpy, disabling python interface")
   message(${NUMPY_INCLUDE_DIR})
   set(ENABLE_python OFF CACHE BOOL "Enable Python bindings" FORCE)
endif()


if ( NOT EXISTS ${PYTHON_INSTDIR})
   message("Did not find python install directory, disabling python interface")
   set(ENABLE_python OFF CACHE BOOL "Enable Python bindings" FORCE)
endif()



if(ENABLE_python)



#include_directories(${PYTHON_INCLUDE_DIR})
#include_directories(${NUMPY_INCLUDE_DIR})

include_directories(${PYTHON_INCLUDE_DIRS})
include_directories(${NUMPY_INCLUDE_DIR})


include_directories(./../External)
include_directories(./../External/Eigen)
include_directories(${PEER_SRC_DIR}/External/alglib)
include_directories(${PEER_SRC_DIR}/include)

set(CMAKE_SWIG_FLAGS "")
#SET(SWIGLINKLIBS ${PYTHON_LIBRARIES})

set_source_files_properties(peer.i PROPERTIES CPLUSPLUS ON)
set_source_files_properties(peer.i PROPERTIES SWIG_FLAGS "-includeall")
set_source_files_properties(peer.i PROPERTIES SWIG_FLAGS "-cpperraswarn")
add_definitions(-DSWIG)
swig_add_module(peer python peer.i)
swig_link_libraries(peer ${SWIGLINKLIBS} peerlib alglib)

IF(${CMAKE_SYSTEM_NAME} MATCHES "Darwin")	 
  # Mac OS X specific code
  SET(CMAKE_MODULE_LINKER_FLAGS "-undefined dynamic_lookup")
ENDIF(${CMAKE_SYSTEM_NAME} MATCHES "Darwin")



#TODO:
#install _peer.so and peer.py into PYTHON_INSTDIR
INSTALL(FILES ${CMAKE_CURRENT_BINARY_DIR}/_peer.so DESTINATION ${PYTHON_INSTDIR})
INSTALL(FILES ${CMAKE_CURRENT_BINARY_DIR}/peer.py DESTINATION ${PYTHON_INSTDIR})
#install demo into the build directory
INSTALL(FILES ${CMAKE_CURRENT_SOURCE_DIR}/peer_demo.py DESTINATION ${CMAKE_CURRENT_BINARY_DIR})

endif(ENABLE_python)
